import streamlit as st
import numpy as np
import pandas as pd
from transformers import pipeline
from PIL import  Image

def intro():
    import streamlit as st
# Title of the application 
st.write("# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã")
st.sidebar.success("–í—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª")
st.markdown('–ê–Ω–∞–ª–∏–∑ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —á–∞—Ç–æ–≤ –¢–µ–ª–µ–≥—Ä–∞–º\n', )
st.info("–ì—Ä—É–ø–ø–∞ 32: –°–º–∏—Ä–Ω–æ–≤–∞ –ê., –ö–æ–∂–µ–¥—É–± –ù., –ë–∞–≥–∞—É–¥–∏–Ω–æ–≤ –≠., –ü–µ—Ç—Ä–∞–∫–æ–≤ –í.")

display = Image.open('images/display.jpg')
display = np.array(display)
st.image(display)

def mapping_demo():
    import streamlit as st
    import pandas as pd
    from transformers import pipeline
    st.markdown(f"# {list(page_names_to_funcs.keys())[1]}")
    @st.cache
    def read_data(uploaded_file):
        return pd.read_csv(uploaded_file)
    datafile = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª csv", ["csv"])
    if datafile is None:
        st.info("""–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö (.csv), —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ.""")
        st.stop()

    data = read_data(datafile).copy()

    model=pipeline("sentiment-analysis",   
                      "blanchefort/rubert-base-cased-sentiment")
                      
    result = st.sidebar.button('–†–∞—Å–ø–æ–∑–Ω–∞—Ç—å')

    df_model = data.copy()

    if result:
        lst = []
    for i in df_model["text"]:
        lst.append(model(str(i))[0]["label"])
        df_model["Sentinent"]=pd.DataFrame(lst)

    st.write(df_model)

def plotting_demo():
    import streamlit as st
    import numpy as np

    st.markdown(f'# {list(page_names_to_funcs.keys())[2]}')
    st.write(
        """
        This demo illustrates a combination of plotting and animation with
Streamlit. We're generating a bunch of random numbers in a loop for around
5 seconds. Enjoy!
"""
    )
page_names_to_funcs = {
    "–ì–ª–∞–≤–Ω–∞—è": intro,
    "–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤": mapping_demo,
    "–î–∏–∞–≥—Ä–∞–º–º—ã": plotting_demo,
   }
demo_name = st.sidebar.selectbox("–í—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª", page_names_to_funcs.keys())
page_names_to_funcs[demo_name]()