import numpy as np
import pandas as pd
import streamlit as st
from transformers import pipeline
from PIL import  Image
from telethon.sync import TelegramClient


st.set_page_config(
    page_title="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å",
    page_icon="üëã",)
# Title of the application 
st.write("# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã")

st.sidebar.success("Select a demo above.")
st.subheader("–ì—Ä—É–ø–ø–∞ 32: –°–º–∏—Ä–Ω–æ–≤–∞ –ê., –ö–æ–∂–µ–¥—É–± –ù., –ë–∞–≥–∞—É–¥–∏–Ω–æ–≤ –≠., –ü–µ—Ç—Ä–∞–∫–æ–≤ –í.")

display = Image.open('images/display.jpg')
display = np.array(display)
st.image(display)

@st.cache
def read_data(uploaded_file):
    return pd.read_csv(uploaded_file)

datafile = st.sidebar.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª csv", ["csv"])
if datafile is None:
    st.info("""–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö (.csv) –Ω–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ.""")
    st.stop()

data = read_data(datafile).copy()

model=pipeline("sentiment-analysis",   
                      "blanchefort/rubert-base-cased-sentiment")
                      
result = st.sidebar.button('–†–∞—Å–ø–æ–∑–Ω–∞—Ç—å')

df_model = data.copy()

if result:
    lst = []
    for i in df_model["text"]:
        lst.append(model(str(i))[0]["label"])
        df_model["Sentinent"]=pd.DataFrame(lst)

st.write(df_model)